digraph "System Architecture" {
	Client [label="Client (User)"]
	FlaskAPI [label="Flask API (Main App)"]
	Auth [label="Auth Module"]
	Challenges [label="Challenges Module"]
	DB [label="Database (SQLite/PostgreSQL)"]
	Redis [label="Redis (Token Blacklist)"]
	JWT [label="JWT Manager"]
	Models [label="Models (User, Challenge)"]
	RBAC [label="Role-Based Access Control"]
	Client -> FlaskAPI [label="User Requests (Login, Register, Play Game)"]
	FlaskAPI -> Auth [label="Handles Login & Tokens"]
	Auth -> DB [label="Fetch User & Password Hash"]
	Auth -> JWT [label="Generate Access/Refresh Token"]
	Auth -> Redis [label="Blacklist Token on Logout"]
	FlaskAPI -> Challenges [label="Fetch Challenges"]
	Challenges -> DB [label="Retrieve Challenge Data"]
	Client -> FlaskAPI [label="Access Protected Routes"]
	FlaskAPI -> JWT [label="Verify Access Token"]
	JWT -> Redis [label="Check Token Blacklist"]
	JWT -> RBAC [label="Enforce Role-Based Access"]
	Auth -> Models [label="Uses User Model"]
	Challenges -> Models [label="Uses Challenge Model"]
}
